@model Project1.Models.tbl_Deposit

@{
    ViewBag.Title = "Edit";
    if ("Super Admin".Equals(Session["UserType"]) && Session["UserID"] != null)
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    if ("Director".Equals(Session["UserType"]) && Session["UserID"] != null)
    {
        Layout = "~/Views/Shared/_LayoutDirector.cshtml";
    }
}

@Scripts.Render("~/bundles/jqueryui")

<h2>Edit Deposit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.PaymentID)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.IsVerified)

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", String.Empty)
                @Html.ValidationMessageFor(model => model.UserID)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount)
                @Html.ValidationMessageFor(model => model.Amount)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PaymentDate, new { @id = "PaymentDate", @readonly = "readonly", Value = @Model.PaymentDate })
                @Html.ValidationMessageFor(model => model.PaymentDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EntryDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EntryDate, new { @id = "Entrydate", @readonly = "readonly", Value = DateTime.Today.ToString("MM/dd/yyyy") })
                @Html.ValidationMessageFor(model => model.EntryDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SourceOfFund, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SourceOfFund)
                @Html.ValidationMessageFor(model => model.SourceOfFund)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment)
                @Html.ValidationMessageFor(model => model.Comment)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsVerified, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsVerified)
                @Html.ValidationMessageFor(model => model.IsVerified)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Deposit List", "IndexForDirectors")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        var maxDate = new Date();
        var Paymentdate = document.getElementById("PaymentDate").value;
        var mon = parseInt(Paymentdate.substring(0, 2));
        var dt = parseInt(Paymentdate.substring(3, 5));
        var yr = parseInt(Paymentdate.substring(6, 10));
        document.getElementById("PaymentDate").value = mon + '/' + dt + '/' + yr;
        $("#PaymentDate").datepicker(
        {
            changeMonth: true,
            changeYear: true,
            yearRange: "-10:+0",
            maxDate: maxDate
        });
        $("#PaymentDate").datepicker("option", "showAnim", "slide");
    });
</script>
